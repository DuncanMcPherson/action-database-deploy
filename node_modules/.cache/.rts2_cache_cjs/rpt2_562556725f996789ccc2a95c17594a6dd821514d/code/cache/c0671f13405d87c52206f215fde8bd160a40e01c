{"code":"import { exec } from \"@actions/exec\";\nasync function execWithCredentials(args, projectId, gacFilename, opts) {\n    let deployOutputBuf = [];\n    const debug = opts?.debug || false;\n    const toolsVersion = opts?.firebaseToolsVersion || 'latest';\n    try {\n        await exec(`gcloud auth application-default login`, [], {\n            listeners: {\n                stdout(data) {\n                    deployOutputBuf.push(data);\n                }\n            }\n        });\n        await exec(`npx firebase-tools@${toolsVersion}`, [\n            ...args,\n            ...(projectId ? [\"--project\", projectId] : []),\n            debug\n                ? \"--debug\"\n                : \"--json\"\n        ], {\n            listeners: {\n                stdout(data) {\n                    deployOutputBuf.push(data);\n                }\n            },\n            env: {\n                ...process.env,\n                // FIREBASE_DEPLOY_AGENT: 'action-database-deploy',\n                GOOGLE_APPLICATION_CREDENTIAL: gacFilename\n            }\n        });\n    }\n    catch (err) {\n        console.log(Buffer.concat(deployOutputBuf).toString());\n        console.log(err.message);\n        if (!debug) {\n            console.log('Retrying with debug to get better error output');\n            await execWithCredentials(args, projectId, gacFilename, { debug: true, firebaseToolsVersion: toolsVersion });\n        }\n        else {\n            throw err;\n        }\n    }\n    return deployOutputBuf.length ?\n        deployOutputBuf[deployOutputBuf.length - 1].toString()\n        : '';\n}\nexport async function deployRules(gacFilename, deployConfig) {\n    const { projectId, version, firebaseToolsVersion } = deployConfig;\n    const deploymentText = await execWithCredentials([\"deploy\", \"--only\", \"database\"], projectId, gacFilename, { firebaseToolsVersion });\n    return JSON.parse(deploymentText);\n}\n","references":["C:/Users/dmcph/WebstormProjects/action-database-deploy/node_modules/@actions/exec/lib/exec.d.ts"],"dts":{"name":"C:/Users/dmcph/WebstormProjects/action-database-deploy/bin/deploy.d.ts","writeByteOrderMark":false,"text":"export type ErrorResult = {\n    status: \"error\";\n    error: string;\n};\nexport type SuccessResult = {\n    status: \"success\";\n};\ntype DeployConfig = {\n    projectId: string;\n    version?: string;\n    firebaseToolsVersion?: string;\n};\nexport type ProductionDeployConfig = DeployConfig & {};\nexport declare function deployRules(gacFilename: string, deployConfig: ProductionDeployConfig): Promise<ErrorResult | SuccessResult>;\nexport {};\n"}}
